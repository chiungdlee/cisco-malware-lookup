from src.url_db import URLDatabase
import time
from typing import List
import requests

class UpdateService:
    def __init__(self, db: URLDatabase):
        # Initialize the update service with a URLDatabase instance
        self.db = db

    def fetch_updates(self) -> List[str]:
        """
        Fetch new malware URLs from an external API.
        :return: A list of new malware URLs.
        """
        try:
            response = requests.get("https://cisco.com/malware-urls")
            response.raise_for_status()
            new_urls = response.json()  # Assuming the API returns a JSON list of URLs
            return new_urls
        except requests.RequestException as e:
            # TODO: Log the exception
            print(e)
            return []

    def run(self) -> None:
        """
        Run the update service to fetch new URLs at regular intervals.
        :return: None
        """
        while True:
            new_urls = self.fetch_updates()
            self.db.update_urls(new_urls)
            time.sleep(600)  # Sleep for 10 minutes

if __name__ == '__main__':
    from src.models import db as database

    db = URLDatabase(database)
    update_service = UpdateService(db)
    update_service.run()
