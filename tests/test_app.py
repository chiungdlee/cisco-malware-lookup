import unittest
from src.app import app, url_db
from src.models import db

class URLInfoTestCase(unittest.TestCase):
    def setUp(self):
        self.app = app
        self.app.config['TESTING'] = True
        self.app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///:memory:'
        self.app_context = self.app.app_context()
        self.app_context.push()
        db.create_all()
        self.client = self.app.test_client()

    def tearDown(self):
        db.session.remove()
        db.drop_all()
        self.app_context.pop()

    def test_safe_url(self):
        response = self.client.get('/v1/urlinfo/http://example.com')
        data = response.get_json()
        self.assertEqual(data['url'], 'http://example.com')
        self.assertTrue(data['safe'])

    def test_malware_url(self):
        url_db.update_urls(["http://malware.com"])
        response = self.client.get('/v1/urlinfo/http://malware.com')
        data = response.get_json()
        self.assertEqual(data['url'], 'http://malware.com')
        self.assertFalse(data['safe'])

if __name__ == '__main__':
    unittest.main()