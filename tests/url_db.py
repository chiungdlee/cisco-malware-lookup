import unittest
from src.models import db, MalwareURL
from src.url_db import URLDatabase
from src.app import app

class URLDatabaseTestCase(unittest.TestCase):
    def setUp(self):
        self.app = app
        self.app.config['TESTING'] = True
        self.app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///:memory:'
        self.app_context = self.app.app_context()
        self.app_context.push()
        db.create_all()
        self.db = URLDatabase(db)

    def tearDown(self):
        db.session.remove()
        db.drop_all()
        self.app_context.pop()

    def test_is_safe(self):
        self.assertTrue(self.db.is_safe("http://example.com"))
        self.db.update_urls(["http://malware.com"])
        self.assertFalse(self.db.is_safe("http://malware.com"))

    def test_update_urls(self):
        new_urls = ["http://malware-a.com", "http://malware-b.com"]
        self.db.update_urls(new_urls)
        self.assertFalse(self.db.is_safe("http://malware-a.com"))
        self.assertFalse(self.db.is_safe("http://malwar-b.com"))

if __name__ == '__main__':
    unittest.main()
